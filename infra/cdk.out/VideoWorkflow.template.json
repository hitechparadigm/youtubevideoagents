{
 "Resources": {
  "ScriptFnServiceRoleAA62A4C9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/ScriptFn/ServiceRole/Resource"
   }
  },
  "ScriptFnServiceRoleDefaultPolicy8BE6CA18": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VideoCore:ExportsOutputFnGetAttMediaBucketBCBB02BAArnB94B784B"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "VideoCore:ExportsOutputFnGetAttMediaBucketBCBB02BAArnB94B784B"
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VideoCore:ExportsOutputFnGetAttJobsDF1CC2D4Arn85C9CFC3"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ScriptFnServiceRoleDefaultPolicy8BE6CA18",
    "Roles": [
     {
      "Ref": "ScriptFnServiceRoleAA62A4C9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/ScriptFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ScriptFnD1C56475": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a1a1b1cc73b654935a0e74e41cc2176fbcd5493b05e7ac2470bf066f0691f472.zip"
    },
    "Environment": {
     "Variables": {
      "MEDIA_BUCKET": {
       "Fn::ImportValue": "VideoCore:ExportsOutputRefMediaBucketBCBB02BA270A7AEB"
      },
      "JOBS_TABLE": {
       "Fn::ImportValue": "VideoCore:ExportsOutputRefJobsDF1CC2D40B4BB8E8"
      }
     }
    },
    "FunctionName": "scriptFn",
    "Handler": "app.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "ScriptFnServiceRoleAA62A4C9",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 60
   },
   "DependsOn": [
    "ScriptFnServiceRoleDefaultPolicy8BE6CA18",
    "ScriptFnServiceRoleAA62A4C9"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/ScriptFn/Resource",
    "aws:asset:path": "asset.a1a1b1cc73b654935a0e74e41cc2176fbcd5493b05e7ac2470bf066f0691f472",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TtsFnServiceRoleDB69BEA5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/TtsFn/ServiceRole/Resource"
   }
  },
  "TtsFnServiceRoleDefaultPolicy19CB8C7B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VideoCore:ExportsOutputFnGetAttMediaBucketBCBB02BAArnB94B784B"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "VideoCore:ExportsOutputFnGetAttMediaBucketBCBB02BAArnB94B784B"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TtsFnServiceRoleDefaultPolicy19CB8C7B",
    "Roles": [
     {
      "Ref": "TtsFnServiceRoleDB69BEA5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/TtsFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TtsFn3E0F963B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a1a1b1cc73b654935a0e74e41cc2176fbcd5493b05e7ac2470bf066f0691f472.zip"
    },
    "Environment": {
     "Variables": {
      "MEDIA_BUCKET": {
       "Fn::ImportValue": "VideoCore:ExportsOutputRefMediaBucketBCBB02BA270A7AEB"
      },
      "JOBS_TABLE": {
       "Fn::ImportValue": "VideoCore:ExportsOutputRefJobsDF1CC2D40B4BB8E8"
      }
     }
    },
    "FunctionName": "ttsFn",
    "Handler": "app.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "TtsFnServiceRoleDB69BEA5",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 60
   },
   "DependsOn": [
    "TtsFnServiceRoleDefaultPolicy19CB8C7B",
    "TtsFnServiceRoleDB69BEA5"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/TtsFn/Resource",
    "aws:asset:path": "asset.a1a1b1cc73b654935a0e74e41cc2176fbcd5493b05e7ac2470bf066f0691f472",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "BrollFnServiceRole5827244C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/BrollFn/ServiceRole/Resource"
   }
  },
  "BrollFnServiceRoleDefaultPolicyE864438D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VideoCore:ExportsOutputFnGetAttMediaBucketBCBB02BAArnB94B784B"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "VideoCore:ExportsOutputFnGetAttMediaBucketBCBB02BAArnB94B784B"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BrollFnServiceRoleDefaultPolicyE864438D",
    "Roles": [
     {
      "Ref": "BrollFnServiceRole5827244C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/BrollFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "BrollFnD20584D6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a1a1b1cc73b654935a0e74e41cc2176fbcd5493b05e7ac2470bf066f0691f472.zip"
    },
    "Environment": {
     "Variables": {
      "MEDIA_BUCKET": {
       "Fn::ImportValue": "VideoCore:ExportsOutputRefMediaBucketBCBB02BA270A7AEB"
      },
      "JOBS_TABLE": {
       "Fn::ImportValue": "VideoCore:ExportsOutputRefJobsDF1CC2D40B4BB8E8"
      }
     }
    },
    "FunctionName": "brollFn",
    "Handler": "app.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "BrollFnServiceRole5827244C",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 60
   },
   "DependsOn": [
    "BrollFnServiceRoleDefaultPolicyE864438D",
    "BrollFnServiceRole5827244C"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/BrollFn/Resource",
    "aws:asset:path": "asset.a1a1b1cc73b654935a0e74e41cc2176fbcd5493b05e7ac2470bf066f0691f472",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UploadFnServiceRoleBC442095": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/UploadFn/ServiceRole/Resource"
   }
  },
  "UploadFnServiceRoleDefaultPolicy1F739523": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VideoCore:ExportsOutputFnGetAttMediaBucketBCBB02BAArnB94B784B"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "VideoCore:ExportsOutputFnGetAttMediaBucketBCBB02BAArnB94B784B"
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VideoCore:ExportsOutputFnGetAttJobsDF1CC2D4Arn85C9CFC3"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UploadFnServiceRoleDefaultPolicy1F739523",
    "Roles": [
     {
      "Ref": "UploadFnServiceRoleBC442095"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/UploadFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UploadFnEA455C04": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a1a1b1cc73b654935a0e74e41cc2176fbcd5493b05e7ac2470bf066f0691f472.zip"
    },
    "Environment": {
     "Variables": {
      "MEDIA_BUCKET": {
       "Fn::ImportValue": "VideoCore:ExportsOutputRefMediaBucketBCBB02BA270A7AEB"
      },
      "JOBS_TABLE": {
       "Fn::ImportValue": "VideoCore:ExportsOutputRefJobsDF1CC2D40B4BB8E8"
      }
     }
    },
    "FunctionName": "uploadFn",
    "Handler": "app.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "UploadFnServiceRoleBC442095",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 120
   },
   "DependsOn": [
    "UploadFnServiceRoleDefaultPolicy1F739523",
    "UploadFnServiceRoleBC442095"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/UploadFn/Resource",
    "aws:asset:path": "asset.a1a1b1cc73b654935a0e74e41cc2176fbcd5493b05e7ac2470bf066f0691f472",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "RenderECSSecurityGroup99CE834F": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "VideoWorkflow/RenderECS/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VideoCompute:ExportsOutputRefVpc8378EB38272D6E3A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/RenderECS/SecurityGroup/Resource"
   }
  },
  "PipelineRoleD68726F7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/Pipeline/Role/Resource"
   }
  },
  "PipelineRoleDefaultPolicyC7A05455": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScriptFnD1C56475",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScriptFnD1C56475",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TtsFn3E0F963B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TtsFn3E0F963B",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "BrollFnD20584D6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "BrollFnD20584D6",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "ecs:RunTask",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::ImportValue": "VideoCompute:ExportsOutputRefRendererTaskD3A483192BA8D805"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            2,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::ImportValue": "VideoCompute:ExportsOutputRefRendererTaskD3A483192BA8D805"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::ImportValue": "VideoCompute:ExportsOutputRefRendererTaskD3A483192BA8D805"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::ImportValue": "VideoCompute:ExportsOutputRefRendererTaskD3A483192BA8D805"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Fn::ImportValue": "VideoCompute:ExportsOutputRefRendererTaskD3A483192BA8D805"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          },
          "/",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Fn::ImportValue": "VideoCompute:ExportsOutputRefRendererTaskD3A483192BA8D805"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          },
          ":*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecs:StopTask",
        "ecs:DescribeTasks"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VideoCompute:ExportsOutputFnGetAttRendererTaskTaskRoleB469C2D1Arn1BC4523C"
        },
        {
         "Fn::ImportValue": "VideoCompute:ExportsOutputFnGetAttRendererTaskExecutionRole3FF4B36BArn0A8E8096"
        }
       ]
      },
      {
       "Action": [
        "events:PutTargets",
        "events:PutRule",
        "events:DescribeRule"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":events:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":rule/StepFunctionsGetEventsForECSTaskRule"
         ]
        ]
       }
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UploadFnEA455C04",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UploadFnEA455C04",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineRoleDefaultPolicyC7A05455",
    "Roles": [
     {
      "Ref": "PipelineRoleD68726F7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/Pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "PipelineC660917D": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"Script\",\"States\":{\"Script\":{\"Next\":\"TTS\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.script\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ScriptFnD1C56475",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"TTS\":{\"Next\":\"Broll\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.tts\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TtsFn3E0F963B",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"Broll\":{\"Next\":\"RenderECS\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.broll\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "BrollFnD20584D6",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"RenderECS\":{\"Next\":\"Upload\",\"Type\":\"Task\",\"ResultPath\":\"$.render\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
       {
        "Fn::ImportValue": "VideoCompute:ExportsOutputFnGetAttClusterEB0386A7Arn2F2E3C3F"
       },
       "\",\"TaskDefinition\":\"VideoComputeRendererTask2CFA902F\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"AssignPublicIp\":\"ENABLED\",\"Subnets\":[\"",
       {
        "Fn::ImportValue": "VideoCompute:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
       },
       "\",\"",
       {
        "Fn::ImportValue": "VideoCompute:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
       },
       "\"],\"SecurityGroups\":[\"",
       {
        "Fn::GetAtt": [
         "RenderECSSecurityGroup99CE834F",
         "GroupId"
        ]
       },
       "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"Renderer\",\"Environment\":[{\"Name\":\"JOB_ID\",\"Value.$\":\"$.jobId\"}]}]},\"LaunchType\":\"FARGATE\"}},\"Upload\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.upload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "UploadFnEA455C04",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":1200}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "PipelineRoleD68726F7",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "PipelineRoleDefaultPolicyC7A05455",
    "PipelineRoleD68726F7"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/Pipeline/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VPyU7DMBD9lt4nQ3AvXCkChAQSSrhHU2daXCd2lRm3qiz/O0oKEj295fAWg+b+AesVnaWyva8Gt8XcKlkPdJYuDzRue8L8koJVFwM87cIfL+BoxNzEgWd7wc84OHuZ5ZUVkHVHIqyCjzOArHGTrGfdkDCI8nH3myedknjB/GylSeGLxMP70v8WTtFzAbYGc8s2TU4vr1NMx7npxii3kcsZ5Q+y3y4sM//rUqBhiWmyDMu6Vmnvwr5AiD3jQe5OxqCpsV4dxLlqSkHdyNhc8QfOeO+iPQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "VideoWorkflow/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}
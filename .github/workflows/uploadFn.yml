name: Deploy uploadFn

on:
  push:
    paths:
      - 'lambdas/uploadFn/**'
      - '.github/workflows/uploadFn.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION:      ${{ vars.AWS_REGION }}
      AWS_ROLE_ARN:    ${{ vars.AWS_ROLE_ARN }}
      LAMBDA_FUNCTION_NAME: uploadFn

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com
          output-env-credentials: true

      - name: Zip source (no vendor)
        shell: bash
        working-directory: lambdas/uploadFn
        run: |
          set -euo pipefail
          rm -f function.zip
          # zip only the source you committed; Lambda already has dependencies from your last manual upload
          zip -r function.zip . -x "__pycache__/*" "*.dist-info/*" "*.egg-info/*"

      - name: Update code
        shell: bash
        working-directory: lambdas/uploadFn
        run: |
          set -euo pipefail
          aws lambda update-function-code \
            --function-name "${LAMBDA_FUNCTION_NAME}" \
            --zip-file fileb://function.zip \
            >/dev/null
          aws lambda wait function-updated --function-name "${LAMBDA_FUNCTION_NAME}"
